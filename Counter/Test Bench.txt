library IEEE;
use IEEE.Std_logic_1164.all;
use IEEE.Numeric_Std.all;

entity Counter_tb is
end;

architecture bench of Counter_tb is

  component Counter
      Port ( Clear : in STD_LOGIC;
             Clock : in STD_LOGIC;
             Q : out STD_LOGIC_VECTOR (2 downto 0));
  end component;

  signal Clear: STD_LOGIC;
  signal Clock: STD_LOGIC;
  signal Q: STD_LOGIC_VECTOR (2 downto 0);

  constant clock_period: time := 10 ns;
  signal stop_the_clock: boolean;

begin

  uut: Counter port map ( Clear => Clear,
                          Clock => Clock,
                          Q     => Q );

  stimulus: process
  begin
  
    -- Put initialisation code here
        wait for 10 ns;
        Clear<='1';
        wait for 10 ns;
        Clear<='0';
        wait for 10 ns;
        Clear<='0';
        wait for 10 ns;
        Clear<='0';
        wait for 10 ns;
        Clear<='0';
        wait for 10 ns;
        Clear<='0';
        wait for 10 ns;
        Clear<='0';
        wait for 10 ns;
        Clear<='0';
        wait for 10 ns;
        Clear<='0';
        wait for 10 ns;
        Clear<='0';

    stop_the_clock <= true;
    wait;
  end process;

  clocking: process
  begin
    while not stop_the_clock loop
      Clock <= '0', '1' after clock_period / 2;
      wait for clock_period;
    end loop;
    wait;
  end process;

end;
